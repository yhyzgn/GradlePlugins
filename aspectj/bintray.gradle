apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'maven'

apply from: 'config.gradle'

// 发布到远程仓库 命令：gradlew install bintrayUpload

def config = project.ext

group = config.pkg.groupId                                         // 数据仓库依赖第一部分
version = config.pkg.version                                       // 数据仓库依赖第三部分
project.archivesBaseName = config.pkg.artifactId                   // 数据残酷依赖第二部分

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

ext {
    pomFilePath = "${project.buildDir.absolutePath}/tmp/pom.xml"
    pomFile = file(pomFilePath)
}

configurations {
    pom
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
    if (pomFile.exists()) {
        pom pomFile
    }
}

task signJars(type: Sign, dependsOn: [jar, javadocJar, sourceJar]) {
    sign configurations.archives
}

task signPom(type: Sign) {
    sign configurations.pom
}

if (project.ext.pomFile.exists()) {
    task preparePublication(dependsOn: [signJars, signPom])
} else {
    task preparePublication(dependsOn: signJars)
}

def getSignatureFiles = {
    def allFiles = project.tasks.signJars.signatureFiles.collect { it }
    def signedSources = allFiles.find { it.name.contains('-sources') }
    def signedJavadoc = allFiles.find { it.name.contains('-javadoc') }
    def signedJar = (allFiles - [signedSources, signJars])[0]
    return [
            [archive: signedSources, classifier: 'sources', extension: 'jar.asc'],
            [archive: signedJavadoc, classifier: 'javadoc', extension: 'jar.asc'],
            [archive: signedJar, classifier: 'null', extension: 'jar.asc']
    ]
}

def getPomSignature = {
    return project.tasks.signPom.signatureFiles.collect { it }[0]
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'jar'
                groupId config.pkg.groupId
                artifactId config.pkg.artifactId
                version config.pkg.version
                name project.name                           // 项目名称
                url config.cvs.url
                description config.pkg.desc

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id config.developer.id                     // 开发者信息
                        name config.developer.name                 // 开发者信息
                        email config.developer.email               // 开发者信息
                    }
                }
                scm {
                    connection "${config.cvs.url}.git"
                    developerConnection "${config.cvs.url}.git"
                    url config.cvs.url
                }
            }
        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    publish = true
    dryRun = false
    override = false

    pkg {
        repo = "maven"
        name = config.pkg.artifactId                                   // 数据仓库依赖第二部分
        userOrg = config.user.org
        desc = config.pkg.desc
        websiteUrl = config.cvs.url
        issueTrackerUrl = "${config.cvs.url}/issues"
        vcsUrl = "${config.cvs.url}.git"
        licenses = ["Apache-2.0"]
        version {
            name = config.pkg.version
            desc = config.pkg.desc
            released = new Date()
            vcsTag = config.pkg.version
            attributes = [
                    'build-info-extractor-gradle': 'https://github.com/jfrog/build-info',
                    'gradle-bintray-plugin'      : 'https://github.com/bintray/gradle-bintray-plugin'
            ]
        }
    }
}